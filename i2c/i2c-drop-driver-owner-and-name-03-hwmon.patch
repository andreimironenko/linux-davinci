From khali@linux-fr.org Sat Nov 26 19:24:30 2005
Date: Sat, 26 Nov 2005 20:37:41 +0100
From: Jean Delvare <khali@linux-fr.org>
To: Greg KH <greg@kroah.com>
Cc: Laurent Riffard <laurent.riffard@free.fr>
Subject: [PATCH 12/25] i2c: Drop i2c_driver.{owner,name}, 3 of 11
Message-Id: <20051126203741.7f0d34ed.khali@linux-fr.org>
Content-Disposition: inline; filename=i2c-drop-driver-owner-and-name-03-hwmon.patch

From: Laurent Riffard <laurent.riffard@free.fr>

We should use the i2c_driver.driver's .name and .owner fields
instead of the i2c_driver's ones.

This patch updates the hwmon drivers.

Signed-off-by: Laurent Riffard <laurent.riffard@free.fr>
Signed-off-by: Jean Delvare <khali@linux-fr.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/hwmon/adm1021.c    |    6 ++++--
 drivers/hwmon/adm1025.c    |    6 ++++--
 drivers/hwmon/adm1026.c    |    6 ++++--
 drivers/hwmon/adm1031.c    |    6 ++++--
 drivers/hwmon/adm9240.c    |    6 ++++--
 drivers/hwmon/asb100.c     |    6 ++++--
 drivers/hwmon/atxp1.c      |    6 ++++--
 drivers/hwmon/ds1621.c     |    6 ++++--
 drivers/hwmon/fscher.c     |    6 ++++--
 drivers/hwmon/fscpos.c     |    6 ++++--
 drivers/hwmon/gl518sm.c    |    6 ++++--
 drivers/hwmon/gl520sm.c    |    6 ++++--
 drivers/hwmon/it87.c       |   15 ++++++++++-----
 drivers/hwmon/lm63.c       |    6 ++++--
 drivers/hwmon/lm75.c       |    6 ++++--
 drivers/hwmon/lm77.c       |    6 ++++--
 drivers/hwmon/lm78.c       |   14 +++++++++-----
 drivers/hwmon/lm80.c       |    6 ++++--
 drivers/hwmon/lm83.c       |    6 ++++--
 drivers/hwmon/lm85.c       |    6 ++++--
 drivers/hwmon/lm87.c       |    6 ++++--
 drivers/hwmon/lm90.c       |    6 ++++--
 drivers/hwmon/lm92.c       |    6 ++++--
 drivers/hwmon/max1619.c    |    6 ++++--
 drivers/hwmon/pc87360.c    |    8 +++++---
 drivers/hwmon/sis5595.c    |    9 ++++++---
 drivers/hwmon/smsc47b397.c |    9 ++++++---
 drivers/hwmon/smsc47m1.c   |    8 +++++---
 drivers/hwmon/via686a.c    |    9 ++++++---
 drivers/hwmon/vt8231.c     |    6 ++++--
 drivers/hwmon/w83627ehf.c  |    8 +++++---
 drivers/hwmon/w83627hf.c   |    8 +++++---
 drivers/hwmon/w83781d.c    |   14 +++++++++-----
 drivers/hwmon/w83792d.c    |    6 ++++--
 drivers/hwmon/w83l785ts.c  |    6 ++++--
 35 files changed, 166 insertions(+), 86 deletions(-)

--- gregkh-2.6.orig/drivers/hwmon/w83781d.c
+++ gregkh-2.6/drivers/hwmon/w83781d.c
@@ -269,16 +269,20 @@ static struct w83781d_data *w83781d_upda
 static void w83781d_init_client(struct i2c_client *client);
 
 static struct i2c_driver w83781d_driver = {
-	.owner = THIS_MODULE,
-	.name = "w83781d",
+	.driver = {
+		.owner = THIS_MODULE,
+		.name = "w83781d",
+	},
 	.id = I2C_DRIVERID_W83781D,
 	.attach_adapter = w83781d_attach_adapter,
 	.detach_client = w83781d_detach_client,
 };
 
 static struct i2c_driver w83781d_isa_driver = {
-	.owner = THIS_MODULE,
-	.name = "w83781d-isa",
+	.driver = {
+		.owner = THIS_MODULE,
+		.name = "w83781d-isa",
+	},
 	.attach_adapter = w83781d_isa_attach_adapter,
 	.detach_client = w83781d_detach_client,
 };
@@ -1011,7 +1015,7 @@ w83781d_detect(struct i2c_adapter *adapt
 	
 	if (is_isa)
 		if (!request_region(address, W83781D_EXTENT,
-				    w83781d_isa_driver.name)) {
+				    w83781d_isa_driver.driver.name)) {
 			dev_dbg(&adapter->dev, "Request of region "
 				"0x%x-0x%x for w83781d failed\n", address,
 				address + W83781D_EXTENT - 1);
--- gregkh-2.6.orig/drivers/hwmon/lm80.c
+++ gregkh-2.6/drivers/hwmon/lm80.c
@@ -143,8 +143,10 @@ static int lm80_write_value(struct i2c_c
  */
 
 static struct i2c_driver lm80_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm80",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm80",
+	},
 	.id		= I2C_DRIVERID_LM80,
 	.attach_adapter	= lm80_attach_adapter,
 	.detach_client	= lm80_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/via686a.c
+++ gregkh-2.6/drivers/hwmon/via686a.c
@@ -572,8 +572,10 @@ static DEVICE_ATTR(alarms, S_IRUGO, show
 /* The driver. I choose to use type i2c_driver, as at is identical to both
    smbus_driver and isa_driver, and clients could be of either kind */
 static struct i2c_driver via686a_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "via686a",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "via686a",
+	},
 	.attach_adapter	= via686a_detect,
 	.detach_client	= via686a_detach_client,
 };
@@ -615,7 +617,8 @@ static int via686a_detect(struct i2c_ada
 	}
 
 	/* Reserve the ISA region */
-	if (!request_region(address, VIA686A_EXTENT, via686a_driver.name)) {
+	if (!request_region(address, VIA686A_EXTENT,
+			    via686a_driver.driver.name)) {
 		dev_err(&adapter->dev, "region 0x%x already in use!\n",
 			address);
 		return -ENODEV;
--- gregkh-2.6.orig/drivers/hwmon/adm1021.c
+++ gregkh-2.6/drivers/hwmon/adm1021.c
@@ -126,8 +126,10 @@ static int read_only;
 
 /* This is the driver that will be inserted */
 static struct i2c_driver adm1021_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "adm1021",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "adm1021",
+	},
 	.id		= I2C_DRIVERID_ADM1021,
 	.attach_adapter	= adm1021_attach_adapter,
 	.detach_client	= adm1021_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/adm1025.c
+++ gregkh-2.6/drivers/hwmon/adm1025.c
@@ -118,8 +118,10 @@ static struct adm1025_data *adm1025_upda
  */
 
 static struct i2c_driver adm1025_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "adm1025",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "adm1025",
+	},
 	.id		= I2C_DRIVERID_ADM1025,
 	.attach_adapter	= adm1025_attach_adapter,
 	.detach_client	= adm1025_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/adm1026.c
+++ gregkh-2.6/drivers/hwmon/adm1026.c
@@ -308,8 +308,10 @@ static void adm1026_init_client(struct i
 
 
 static struct i2c_driver adm1026_driver = {
-	.owner          = THIS_MODULE,
-	.name           = "adm1026",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "adm1026",
+	},
 	.attach_adapter = adm1026_attach_adapter,
 	.detach_client  = adm1026_detach_client,
 };
--- gregkh-2.6.orig/drivers/hwmon/adm1031.c
+++ gregkh-2.6/drivers/hwmon/adm1031.c
@@ -105,8 +105,10 @@ static struct adm1031_data *adm1031_upda
 
 /* This is the driver that will be inserted */
 static struct i2c_driver adm1031_driver = {
-	.owner = THIS_MODULE,
-	.name = "adm1031",
+	.driver = {
+		.owner = THIS_MODULE,
+		.name = "adm1031",
+	},
 	.attach_adapter = adm1031_attach_adapter,
 	.detach_client = adm1031_detach_client,
 };
--- gregkh-2.6.orig/drivers/hwmon/adm9240.c
+++ gregkh-2.6/drivers/hwmon/adm9240.c
@@ -137,8 +137,10 @@ static struct adm9240_data *adm9240_upda
 
 /* driver data */
 static struct i2c_driver adm9240_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "adm9240",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "adm9240",
+	},
 	.id		= I2C_DRIVERID_ADM9240,
 	.attach_adapter	= adm9240_attach_adapter,
 	.detach_client	= adm9240_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/asb100.c
+++ gregkh-2.6/drivers/hwmon/asb100.c
@@ -217,8 +217,10 @@ static struct asb100_data *asb100_update
 static void asb100_init_client(struct i2c_client *client);
 
 static struct i2c_driver asb100_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "asb100",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "asb100",
+	},
 	.id		= I2C_DRIVERID_ASB100,
 	.attach_adapter	= asb100_attach_adapter,
 	.detach_client	= asb100_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/atxp1.c
+++ gregkh-2.6/drivers/hwmon/atxp1.c
@@ -50,8 +50,10 @@ static struct atxp1_data * atxp1_update_
 static int atxp1_detect(struct i2c_adapter *adapter, int address, int kind);
 
 static struct i2c_driver atxp1_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "atxp1",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "atxp1",
+	},
 	.attach_adapter = atxp1_attach_adapter,
 	.detach_client	= atxp1_detach_client,
 };
--- gregkh-2.6.orig/drivers/hwmon/ds1621.c
+++ gregkh-2.6/drivers/hwmon/ds1621.c
@@ -89,8 +89,10 @@ static struct ds1621_data *ds1621_update
 
 /* This is the driver that will be inserted */
 static struct i2c_driver ds1621_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "ds1621",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "ds1621",
+	},
 	.id		= I2C_DRIVERID_DS1621,
 	.attach_adapter	= ds1621_attach_adapter,
 	.detach_client	= ds1621_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/fscher.c
+++ gregkh-2.6/drivers/hwmon/fscher.c
@@ -118,8 +118,10 @@ static int fscher_write_value(struct i2c
  */
  
 static struct i2c_driver fscher_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "fscher",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "fscher",
+	},
 	.id		= I2C_DRIVERID_FSCHER,
 	.attach_adapter	= fscher_attach_adapter,
 	.detach_client	= fscher_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/fscpos.c
+++ gregkh-2.6/drivers/hwmon/fscpos.c
@@ -100,8 +100,10 @@ static void reset_fan_alarm(struct i2c_c
  * Driver data (common to all clients)
  */
 static struct i2c_driver fscpos_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "fscpos",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "fscpos",
+	},
 	.id		= I2C_DRIVERID_FSCPOS,
 	.attach_adapter	= fscpos_attach_adapter,
 	.detach_client	= fscpos_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/gl518sm.c
+++ gregkh-2.6/drivers/hwmon/gl518sm.c
@@ -151,8 +151,10 @@ static struct gl518_data *gl518_update_d
 
 /* This is the driver that will be inserted */
 static struct i2c_driver gl518_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "gl518sm",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "gl518sm",
+	},
 	.id		= I2C_DRIVERID_GL518,
 	.attach_adapter	= gl518_attach_adapter,
 	.detach_client	= gl518_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/gl520sm.c
+++ gregkh-2.6/drivers/hwmon/gl520sm.c
@@ -109,8 +109,10 @@ static struct gl520_data *gl520_update_d
 
 /* Driver data */
 static struct i2c_driver gl520_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "gl520sm",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "gl520sm",
+	},
 	.id		= I2C_DRIVERID_GL520,
 	.attach_adapter	= gl520_attach_adapter,
 	.detach_client	= gl520_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/it87.c
+++ gregkh-2.6/drivers/hwmon/it87.c
@@ -234,16 +234,20 @@ static void it87_init_client(struct i2c_
 
 
 static struct i2c_driver it87_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "it87",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "it87",
+	},
 	.id		= I2C_DRIVERID_IT87,
 	.attach_adapter	= it87_attach_adapter,
 	.detach_client	= it87_detach_client,
 };
 
 static struct i2c_driver it87_isa_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "it87-isa",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "it87-isa",
+	},
 	.attach_adapter	= it87_isa_attach_adapter,
 	.detach_client	= it87_detach_client,
 };
@@ -760,7 +764,8 @@ static int it87_detect(struct i2c_adapte
 
 	/* Reserve the ISA region */
 	if (is_isa)
-		if (!request_region(address, IT87_EXTENT, it87_isa_driver.name))
+		if (!request_region(address, IT87_EXTENT,
+				    it87_isa_driver.driver.name))
 			goto ERROR0;
 
 	/* For now, we presume we have a valid client. We create the
--- gregkh-2.6.orig/drivers/hwmon/lm63.c
+++ gregkh-2.6/drivers/hwmon/lm63.c
@@ -139,8 +139,10 @@ static void lm63_init_client(struct i2c_
  */
 
 static struct i2c_driver lm63_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm63",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm63",
+	},
 	.attach_adapter	= lm63_attach_adapter,
 	.detach_client	= lm63_detach_client,
 };
--- gregkh-2.6.orig/drivers/hwmon/lm75.c
+++ gregkh-2.6/drivers/hwmon/lm75.c
@@ -66,8 +66,10 @@ static struct lm75_data *lm75_update_dev
 
 /* This is the driver that will be inserted */
 static struct i2c_driver lm75_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm75",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm75",
+	},
 	.id		= I2C_DRIVERID_LM75,
 	.attach_adapter	= lm75_attach_adapter,
 	.detach_client	= lm75_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/lm77.c
+++ gregkh-2.6/drivers/hwmon/lm77.c
@@ -74,8 +74,10 @@ static struct lm77_data *lm77_update_dev
 
 /* This is the driver that will be inserted */
 static struct i2c_driver lm77_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm77",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm77",
+	},
 	.attach_adapter = lm77_attach_adapter,
 	.detach_client	= lm77_detach_client,
 };
--- gregkh-2.6.orig/drivers/hwmon/lm78.c
+++ gregkh-2.6/drivers/hwmon/lm78.c
@@ -164,16 +164,20 @@ static void lm78_init_client(struct i2c_
 
 
 static struct i2c_driver lm78_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm78",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm78",
+	},
 	.id		= I2C_DRIVERID_LM78,
 	.attach_adapter	= lm78_attach_adapter,
 	.detach_client	= lm78_detach_client,
 };
 
 static struct i2c_driver lm78_isa_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm78-isa",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm78-isa",
+	},
 	.attach_adapter	= lm78_isa_attach_adapter,
 	.detach_client	= lm78_detach_client,
 };
@@ -496,7 +500,7 @@ static int lm78_detect(struct i2c_adapte
 	/* Reserve the ISA region */
 	if (is_isa)
 		if (!request_region(address, LM78_EXTENT,
-				    lm78_isa_driver.name)) {
+				    lm78_isa_driver.driver.name)) {
 			err = -EBUSY;
 			goto ERROR0;
 		}
--- gregkh-2.6.orig/drivers/hwmon/lm83.c
+++ gregkh-2.6/drivers/hwmon/lm83.c
@@ -124,8 +124,10 @@ static struct lm83_data *lm83_update_dev
  */
  
 static struct i2c_driver lm83_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm83",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm83",
+	},
 	.id		= I2C_DRIVERID_LM83,
 	.attach_adapter	= lm83_attach_adapter,
 	.detach_client	= lm83_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/lm85.c
+++ gregkh-2.6/drivers/hwmon/lm85.c
@@ -380,8 +380,10 @@ static void lm85_init_client(struct i2c_
 
 
 static struct i2c_driver lm85_driver = {
-	.owner          = THIS_MODULE,
-	.name           = "lm85",
+	.driver = {
+		.owner  = THIS_MODULE,
+		.name   = "lm85",
+	},
 	.id             = I2C_DRIVERID_LM85,
 	.attach_adapter = lm85_attach_adapter,
 	.detach_client  = lm85_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/lm87.c
+++ gregkh-2.6/drivers/hwmon/lm87.c
@@ -161,8 +161,10 @@ static struct lm87_data *lm87_update_dev
  */
 
 static struct i2c_driver lm87_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm87",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm87",
+	},
 	.id		= I2C_DRIVERID_LM87,
 	.attach_adapter	= lm87_attach_adapter,
 	.detach_client	= lm87_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/lm90.c
+++ gregkh-2.6/drivers/hwmon/lm90.c
@@ -186,8 +186,10 @@ static struct lm90_data *lm90_update_dev
  */
 
 static struct i2c_driver lm90_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm90",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm90",
+	},
 	.id		= I2C_DRIVERID_LM90,
 	.attach_adapter	= lm90_attach_adapter,
 	.detach_client	= lm90_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/lm92.c
+++ gregkh-2.6/drivers/hwmon/lm92.c
@@ -410,8 +410,10 @@ static int lm92_detach_client(struct i2c
  */
 
 static struct i2c_driver lm92_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "lm92",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "lm92",
+	},
 	.id		= I2C_DRIVERID_LM92,
 	.attach_adapter	= lm92_attach_adapter,
 	.detach_client	= lm92_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/max1619.c
+++ gregkh-2.6/drivers/hwmon/max1619.c
@@ -90,8 +90,10 @@ static struct max1619_data *max1619_upda
  */
 
 static struct i2c_driver max1619_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "max1619",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "max1619",
+	},
 	.attach_adapter	= max1619_attach_adapter,
 	.detach_client	= max1619_detach_client,
 };
--- gregkh-2.6.orig/drivers/hwmon/pc87360.c
+++ gregkh-2.6/drivers/hwmon/pc87360.c
@@ -236,8 +236,10 @@ static struct pc87360_data *pc87360_upda
  */
 
 static struct i2c_driver pc87360_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "pc87360",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "pc87360",
+	},
 	.attach_adapter	= pc87360_detect,
 	.detach_client	= pc87360_detach_client,
 };
@@ -798,7 +800,7 @@ static int pc87360_detect(struct i2c_ada
 	for (i = 0; i < 3; i++) {
 		if (((data->address[i] = extra_isa[i]))
 		 && !request_region(extra_isa[i], PC87360_EXTENT,
-		 		    pc87360_driver.name)) {
+		 		    pc87360_driver.driver.name)) {
 			dev_err(&new_client->dev, "Region 0x%x-0x%x already "
 				"in use!\n", extra_isa[i],
 				extra_isa[i]+PC87360_EXTENT-1);
--- gregkh-2.6.orig/drivers/hwmon/sis5595.c
+++ gregkh-2.6/drivers/hwmon/sis5595.c
@@ -198,8 +198,10 @@ static struct sis5595_data *sis5595_upda
 static void sis5595_init_client(struct i2c_client *client);
 
 static struct i2c_driver sis5595_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "sis5595",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "sis5595",
+	},
 	.attach_adapter	= sis5595_detect,
 	.detach_client	= sis5595_detach_client,
 };
@@ -484,7 +486,8 @@ static int sis5595_detect(struct i2c_ada
 	if (force_addr)
 		address = force_addr & ~(SIS5595_EXTENT - 1);
 	/* Reserve the ISA region */
-	if (!request_region(address, SIS5595_EXTENT, sis5595_driver.name)) {
+	if (!request_region(address, SIS5595_EXTENT,
+			    sis5595_driver.driver.name)) {
 		err = -EBUSY;
 		goto exit;
 	}
--- gregkh-2.6.orig/drivers/hwmon/smsc47b397.c
+++ gregkh-2.6/drivers/hwmon/smsc47b397.c
@@ -226,8 +226,10 @@ static int smsc47b397_detach_client(stru
 static int smsc47b397_detect(struct i2c_adapter *adapter);
 
 static struct i2c_driver smsc47b397_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "smsc47b397",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "smsc47b397",
+	},
 	.attach_adapter	= smsc47b397_detect,
 	.detach_client	= smsc47b397_detach_client,
 };
@@ -238,7 +240,8 @@ static int smsc47b397_detect(struct i2c_
 	struct smsc47b397_data *data;
 	int err = 0;
 
-	if (!request_region(address, SMSC_EXTENT, smsc47b397_driver.name)) {
+	if (!request_region(address, SMSC_EXTENT,
+			    smsc47b397_driver.driver.name)) {
 		dev_err(&adapter->dev, "Region 0x%x already in use!\n",
 			address);
 		return -EBUSY;
--- gregkh-2.6.orig/drivers/hwmon/smsc47m1.c
+++ gregkh-2.6/drivers/hwmon/smsc47m1.c
@@ -126,8 +126,10 @@ static struct smsc47m1_data *smsc47m1_up
 
 
 static struct i2c_driver smsc47m1_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "smsc47m1",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "smsc47m1",
+	},
 	.attach_adapter	= smsc47m1_detect,
 	.detach_client	= smsc47m1_detach_client,
 };
@@ -394,7 +396,7 @@ static int smsc47m1_detect(struct i2c_ad
 	int err = 0;
 	int fan1, fan2, pwm1, pwm2;
 
-	if (!request_region(address, SMSC_EXTENT, smsc47m1_driver.name)) {
+	if (!request_region(address, SMSC_EXTENT, smsc47m1_driver.driver.name)) {
 		dev_err(&adapter->dev, "Region 0x%x already in use!\n", address);
 		return -EBUSY;
 	}
--- gregkh-2.6.orig/drivers/hwmon/w83627ehf.c
+++ gregkh-2.6/drivers/hwmon/w83627ehf.c
@@ -676,7 +676,7 @@ static int w83627ehf_detect(struct i2c_a
 	int i, err = 0;
 
 	if (!request_region(address + REGION_OFFSET, REGION_LENGTH,
-	                    w83627ehf_driver.name)) {
+	                    w83627ehf_driver.driver.name)) {
 		err = -EBUSY;
 		goto exit;
 	}
@@ -785,8 +785,10 @@ static int w83627ehf_detach_client(struc
 }
 
 static struct i2c_driver w83627ehf_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "w83627ehf",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "w83627ehf",
+	},
 	.attach_adapter	= w83627ehf_detect,
 	.detach_client	= w83627ehf_detach_client,
 };
--- gregkh-2.6.orig/drivers/hwmon/w83627hf.c
+++ gregkh-2.6/drivers/hwmon/w83627hf.c
@@ -332,8 +332,10 @@ static struct w83627hf_data *w83627hf_up
 static void w83627hf_init_client(struct i2c_client *client);
 
 static struct i2c_driver w83627hf_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "w83627hf",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "w83627hf",
+	},
 	.attach_adapter	= w83627hf_detect,
 	.detach_client	= w83627hf_detach_client,
 };
@@ -1009,7 +1011,7 @@ static int w83627hf_detect(struct i2c_ad
 		address = force_addr & WINB_ALIGNMENT;
 
 	if (!request_region(address + WINB_REGION_OFFSET, WINB_REGION_SIZE,
-	                    w83627hf_driver.name)) {
+	                    w83627hf_driver.driver.name)) {
 		err = -EBUSY;
 		goto ERROR0;
 	}
--- gregkh-2.6.orig/drivers/hwmon/w83792d.c
+++ gregkh-2.6/drivers/hwmon/w83792d.c
@@ -317,8 +317,10 @@ static void w83792d_print_debug(struct w
 static void w83792d_init_client(struct i2c_client *client);
 
 static struct i2c_driver w83792d_driver = {
-	.owner = THIS_MODULE,
-	.name = "w83792d",
+	.driver = {
+		.owner = THIS_MODULE,
+		.name = "w83792d",
+	},
 	.attach_adapter = w83792d_attach_adapter,
 	.detach_client = w83792d_detach_client,
 };
--- gregkh-2.6.orig/drivers/hwmon/w83l785ts.c
+++ gregkh-2.6/drivers/hwmon/w83l785ts.c
@@ -92,8 +92,10 @@ static struct w83l785ts_data *w83l785ts_
  */
  
 static struct i2c_driver w83l785ts_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "w83l785ts",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "w83l785ts",
+	},
 	.id		= I2C_DRIVERID_W83L785TS,
 	.attach_adapter	= w83l785ts_attach_adapter,
 	.detach_client	= w83l785ts_detach_client,
--- gregkh-2.6.orig/drivers/hwmon/vt8231.c
+++ gregkh-2.6/drivers/hwmon/vt8231.c
@@ -585,8 +585,10 @@ static ssize_t show_alarms(struct device
 static DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);
 
 static struct i2c_driver vt8231_driver = {
-	.owner		= THIS_MODULE,
-	.name		= "vt8231",
+	.driver = {
+		.owner	= THIS_MODULE,
+		.name	= "vt8231",
+	},
 	.attach_adapter	= vt8231_detect,
 	.detach_client	= vt8231_detach_client,
 };
