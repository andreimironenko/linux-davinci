From foo@baz Tue Apr  9 12:12:43 2002
Date: Tue, 18 Jul 2006 10:59:59 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: Driver: multi-threaded hacks

 - Fix "issue" with ata_piix doing multi-threaded boot
 - better debugging in the driver probe
 - try to wait at boot time for the root disk to show up before looking
   for it.

Use at your own risk.

Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/base/dd.c       |   29 ++++++++++++++++++++++++++---
 drivers/scsi/ata_piix.c |    2 +-
 init/do_mounts.c        |    5 +++++
 3 files changed, 32 insertions(+), 4 deletions(-)

--- gregkh-2.6.orig/drivers/base/dd.c
+++ gregkh-2.6/drivers/base/dd.c
@@ -57,6 +57,7 @@ struct stupid_thread_structure {
 	struct device *dev;
 };
 
+static atomic_t count = ATOMIC_INIT(0);
 static int really_probe(void *void_data)
 {
 	struct stupid_thread_structure *data = void_data;
@@ -64,8 +65,12 @@ static int really_probe(void *void_data)
 	struct device *dev = data->dev;
 	int ret = 0;
 
-	pr_debug("%s: Probing driver %s with device %s\n",
-		 drv->bus->name, drv->name, dev->bus_id);
+//	pr_debug("%s: Probing driver %s with device %s\n",
+//		 drv->bus->name, drv->name, dev->bus_id);
+	atomic_inc(&count);
+	printk("GREG: %s: enter: count = %d driver = %s device = %s\n",
+		__FUNCTION__, count.counter, drv->name, dev->bus_id);
+
 	dev->driver = drv;
 	if (dev->bus->probe) {
 		ret = dev->bus->probe(dev);
@@ -82,7 +87,8 @@ static int really_probe(void *void_data)
 	}
 	device_bind_driver(dev);
 	ret = 1;
-	pr_debug("%s: Bound Device %s to Driver %s\n",
+//FIXME	pr_debug("%s: Bound Device %s to Driver %s\n",
+	printk("%s: Bound Device %s to Driver %s\n",
 		 drv->bus->name, dev->bus_id, drv->name);
 	goto done;
 
@@ -101,10 +107,27 @@ probe_failed:
 	}
 done:
 	kfree(data);
+	printk("GREG: %s:  exit: count = %d driver = %s device = %s\n",
+		__FUNCTION__, count.counter, drv->name, dev->bus_id);
+	atomic_dec(&count);
 	return ret;
 }
 
 /**
+ * driver_probe_done
+ * Determine if the probe sequence is finished or not.
+ *
+ * Should really use a semaphore, not an atomic variable...
+ */
+int driver_probe_done(void)
+{
+	printk("GREG: %s: count = %d\n", __FUNCTION__, count.counter);
+	if (atomic_read(&count))
+		return -EBUSY;
+	return 0;
+}
+
+/**
  * driver_probe_device - attempt to bind device & driver together
  * @drv: driver to bind a device to
  * @dev: device to try to bind to the driver
--- gregkh-2.6.orig/drivers/scsi/ata_piix.c
+++ gregkh-2.6/drivers/scsi/ata_piix.c
@@ -945,7 +945,7 @@ static int __init piix_init(void)
 	if (rc)
 		return rc;
 
-	in_module_init = 0;
+//	in_module_init = 0;  multi-threaded probe doesn't like this...
 
 	DPRINTK("done\n");
 	return 0;
--- gregkh-2.6.orig/init/do_mounts.c
+++ gregkh-2.6/init/do_mounts.c
@@ -390,6 +390,7 @@ void __init mount_root(void)
 	mount_block_root("/dev/root", root_mountflags);
 }
 
+extern int driver_probe_done(void);
 /*
  * Prepare the namespace - decide what/where to mount, load ramdisks, etc.
  */
@@ -403,6 +404,10 @@ void __init prepare_namespace(void)
 		ssleep(root_delay);
 	}
 
+	while (driver_probe_done() != 0) {
+		msleep(100);
+	}
+
 	md_run_setup();
 
 	if (saved_root_name[0]) {
