From owner-linux-pci@atrey.karlin.mff.cuni.cz Thu Mar 22 03:53:43 2007
From: Michael Ellerman <michael@ellerman.id.au>
To: linux-pci@atrey.karlin.mff.cuni.cz
Cc: Greg Kroah-Hartman <greg@kroah.com>,
	Eric W.Biederman <ebiederm@xmission.com>,
	David S.Miller <davem@davemloft.net>,
	Benjamin Herrenschmidt <benh@kernel.crashing.org>,
	Andrew Morton <akpm@osdl.org>,
	<daniel.e.wolstenholme@intel.com>
Date: Thu, 22 Mar 2007 21:51:31 +1100
Subject: MSI: Simplify BUG() handling in msi_remove_pci_irq_vectors() part 2
Message-Id: <20070322105334.B5A46DDF59@ozlabs.org>

Although it might be nice to do a printk before BUG'ing, it's really not
necessary, and it complicates the code.

The behaviour has changed slightly, in that before we set a flag if the irq
had an action, and continued freeing the other irqs. But as I see it that's
all irrelevant because we end up BUG'ing anyway.

Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/pci/msi.c |   16 +++++-----------
 1 file changed, 5 insertions(+), 11 deletions(-)

--- a/drivers/pci/msi.c
+++ b/drivers/pci/msi.c
@@ -697,27 +697,21 @@ void msi_remove_pci_irq_vectors(struct p
 		msi_free_irq(dev, dev->first_msi_irq);
 	}
 	if (dev->msix_enabled) {
-		int irq, head, tail = 0, warning = 0;
+		int irq, head, tail = 0;
 		void __iomem *base = NULL;
 
 		irq = head = dev->first_msi_irq;
 		while (head != tail) {
 			tail = get_irq_msi(irq)->link.tail;
 			base = get_irq_msi(irq)->mask_base;
-			if (irq_has_action(irq))
-				warning = 1;
-			else if (irq != head) /* Release MSI-X irq */
+
+			BUG_ON(irq_has_action(irq));
+
+			if (irq != head) /* Release MSI-X irq */
 				msi_free_irq(dev, irq);
 			irq = tail;
 		}
 		msi_free_irq(dev, irq);
-		if (warning) {
-			iounmap(base);
-			printk(KERN_WARNING "PCI: %s: msi_remove_pci_irq_vectors() "
-			       "called without free_irq() on all MSI-X irqs\n",
-			       pci_name(dev));
-			BUG_ON(warning > 0);
-		}
 	}
 }
 
