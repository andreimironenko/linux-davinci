From michael@ozlabs.org Thu Apr  5 00:19:10 2007
From: Michael Ellerman <michael@ellerman.id.au>
Date: Thu, 05 Apr 2007 17:19:07 +1000
Subject: [PATCH 1/9] MSI: Rename pci_msi_supported() to pci_msi_check_device()
To: linux-pci@atrey.karlin.mff.cuni.cz
Cc: Greg Kroah-Hartman <greg@kroah.com>, Eric W. Biederman <ebiederm@xmission.com>, Benjamin Herrenschmidt <benh@kernel.crashing.org>, David S. Miller <davem@davemloft.net>
Message-ID: <20070405071908.57707DDE42@ozlabs.org>


As pointed out by Eric, the name pci_msi_supported() suggests it should
return a boolean value, however it doesn't. So update the name to be
a bit less confusing and update the doco too.

Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/pci/msi.c |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

--- a/drivers/pci/msi.c
+++ b/drivers/pci/msi.c
@@ -457,15 +457,15 @@ static int msix_capability_init(struct p
 }
 
 /**
- * pci_msi_supported - check whether MSI may be enabled on device
+ * pci_msi_check_device - check whether MSI may be enabled on a device
  * @dev: pointer to the pci_dev data structure of MSI device function
  * @type: are we checking for MSI or MSI-X ?
  *
  * Look at global flags, the device itself, and its parent busses
- * to return 0 if MSI are supported for the device.
+ * to determine if MSI/-X are supported for the device. If MSI/-X is
+ * supported return 0, else return an error code.
  **/
-static
-int pci_msi_supported(struct pci_dev * dev, int type)
+static int pci_msi_check_device(struct pci_dev * dev, int type)
 {
 	struct pci_bus *bus;
 
@@ -503,7 +503,7 @@ int pci_enable_msi(struct pci_dev* dev)
 {
 	int status;
 
-	if (pci_msi_supported(dev, PCI_CAP_ID_MSI))
+	if (pci_msi_check_device(dev, PCI_CAP_ID_MSI))
 		return -EINVAL;
 
 	WARN_ON(!!dev->msi_enabled);
@@ -601,7 +601,7 @@ int pci_enable_msix(struct pci_dev* dev,
 	int i, j;
 	u16 control;
 
-	if (!entries || pci_msi_supported(dev, PCI_CAP_ID_MSIX))
+	if (!entries || pci_msi_check_device(dev, PCI_CAP_ID_MSIX))
  		return -EINVAL;
 
 	pos = pci_find_capability(dev, PCI_CAP_ID_MSIX);
