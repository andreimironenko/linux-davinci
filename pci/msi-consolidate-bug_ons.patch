From owner-linux-pci@atrey.karlin.mff.cuni.cz Thu Mar 22 03:53:50 2007
From: Michael Ellerman <michael@ellerman.id.au>
To: linux-pci@atrey.karlin.mff.cuni.cz
Cc: Greg Kroah-Hartman <greg@kroah.com>,
	Eric W.Biederman <ebiederm@xmission.com>,
	David S.Miller <davem@davemloft.net>,
	Benjamin Herrenschmidt <benh@kernel.crashing.org>,
	Andrew Morton <akpm@osdl.org>,
	<daniel.e.wolstenholme@intel.com>
Date: Thu, 22 Mar 2007 21:51:34 +1100
Subject: MSI: Consolidate BUG_ON()s.
Message-Id: <20070322105335.A55D5DDF5F@ozlabs.org>

When freeing MSIs and MSI-Xs, we BUG_ON() if the irq has not been
freed, ie. if it still has an action. We can consolidate all of these
BUG_ON()s into msi_free_irqs() as all the code paths lead there almost
immediately anyway.

Signed-off-by: Michael Ellerman <michael@ellerman.id.au>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/pci/msi.c |   10 +++-------
 1 file changed, 3 insertions(+), 7 deletions(-)

--- a/drivers/pci/msi.c
+++ b/drivers/pci/msi.c
@@ -573,8 +573,6 @@ void pci_disable_msi(struct pci_dev* dev
 		return;
 	}
 
-	BUG_ON(irq_has_action(dev->first_msi_irq));
-
 	default_irq = entry->msi_attrib.default_irq;
 	msi_free_irq(dev, dev->first_msi_irq);
 
@@ -590,6 +588,8 @@ static int msi_free_irq(struct pci_dev* 
 	int head, entry_nr, type;
 	void __iomem *base;
 
+	BUG_ON(irq_has_action(irq));
+
 	entry = get_irq_msi(irq);
 	if (!entry || entry->dev != dev) {
 		return -EINVAL;
@@ -682,8 +682,6 @@ static void msix_free_all_irqs(struct pc
 	while (head != tail) {
 		tail = get_irq_msi(irq)->link.tail;
 
-		BUG_ON(irq_has_action(irq));
-
 		if (irq != head)
 			msi_free_irq(dev, irq);
 		irq = tail;
@@ -723,10 +721,8 @@ void msi_remove_pci_irq_vectors(struct p
 	if (!pci_msi_enable || !dev)
  		return;
 
-	if (dev->msi_enabled) {
-		BUG_ON(irq_has_action(dev->first_msi_irq));
+	if (dev->msi_enabled)
 		msi_free_irq(dev, dev->first_msi_irq);
-	}
 
 	if (dev->msix_enabled)
 		msix_free_all_irqs(dev);
