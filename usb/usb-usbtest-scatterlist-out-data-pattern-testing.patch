From david-b@pacbell.net Sun Apr  2 11:38:18 2006
From: David Brownell <david-b@pacbell.net>
To: linux-usb-devel@lists.sourceforge.net
Subject: USB: usbtest: scatterlist OUT data pattern testing
Date: Sun, 2 Apr 2006 10:20:15 -0800
Cc: Greg KH <greg@kroah.com>
Message-Id: <200604021120.16233.david-b@pacbell.net>

Previously, scatterlist tests didn't write patterned data.  Given how many
corner cases are addresed by them, this was a significant gap in Linux-USB
test coverage.  Moreover, when peripherals checked for correct data patterns,
false error reports would drown out the true ones.

This adds the pattern on the way OUT from the host, so scatterlist tests can
now be used to uncover bugs like host TX or peripheral RX paths failing for
back-to-back short packets.  It's easy enough to get an error there with at
least one of the {DMA,PIO}{RX,TX} code paths, or run into hardware races
that need to be defended against.

Note this patch doesn't add checking for correct data patterns on the way
IN from peripherals, just a FIXME for later.

Signed-off-by: David Brownell <dbrownell@users.sourceforge.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/misc/usbtest.c |   13 +++++++++++++
 1 file changed, 13 insertions(+)

--- gregkh-2.6.orig/drivers/usb/misc/usbtest.c
+++ gregkh-2.6/drivers/usb/misc/usbtest.c
@@ -381,6 +381,7 @@ alloc_sglist (int nents, int max, int va
 
 	for (i = 0; i < nents; i++) {
 		char		*buf;
+		unsigned	j;
 
 		buf = kzalloc (size, SLAB_KERNEL);
 		if (!buf) {
@@ -391,6 +392,16 @@ alloc_sglist (int nents, int max, int va
 		/* kmalloc pages are always physically contiguous! */
 		sg_init_one(&sg[i], buf, size);
 
+		switch (pattern) {
+		case 0:
+			/* already zeroed */
+			break;
+		case 1:
+			for (j = 0; j < size; j++)
+				*buf++ = (u8) (j % 63);
+			break;
+		}
+
 		if (vary) {
 			size += vary;
 			size %= max;
@@ -425,6 +436,8 @@ static int perform_sglist (
 		usb_sg_wait (req);
 		retval = req->status;
 
+		/* FIXME check resulting data pattern */
+
 		/* FIXME if endpoint halted, clear halt (and log) */
 	}
 
