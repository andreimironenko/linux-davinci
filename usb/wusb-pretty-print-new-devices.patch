From inaky@linux.intel.com Fri Aug 25 19:38:04 2006
Message-Id: <20060826023759.489243000@sodium.jf.intel.com>
Date: Fri, 25 Aug 2006 19:35:31 -0700
From: Inaky Perez-Gonzalez <inaky.perez-gonzalez@intel.com>
To: greg@kroah.com
Cc: linux-usb-devel@lists.sourceforge.net, David Brownell <david-b@pacbell.net>, Alan Stern <stern@rowland.harvard.edu>, inaky@linux.intel.com, Inaky Perez-Gonzalez <inaky.perez-gonzalez@intel.com>
Subject: [patch 4/4] wusb: pretty print new wireless USB devices when they connect
Content-Disposition: inline; filename=wusb-pretty-print-new-devices.patch

New code being pushed to linuxuwb.org requires this patch to connect
WUSB devices.

Signed-off-by: Inaky Perez-Gonzalez <inaky.perez-gonzalez@intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/core/hub.c |   25 +++++++++++++++----------
 1 file changed, 15 insertions(+), 10 deletions(-)

--- gregkh-2.6.orig/drivers/usb/core/hub.c
+++ gregkh-2.6/drivers/usb/core/hub.c
@@ -2028,6 +2028,7 @@ hub_port_init (struct usb_hub *hub, stru
 	int			i, j, retval;
 	unsigned		delay = HUB_SHORT_RESET_TIME;
 	enum usb_device_speed	oldspeed = udev->speed;
+	char 			*speed, *type;
 
 	/* root hub ports have a slightly longer reset period
 	 * (from USB 2.0 spec, section 7.1.7.5)
@@ -2084,17 +2085,21 @@ hub_port_init (struct usb_hub *hub, stru
 		goto fail;
 	}
  
+	type = "";
+	switch (udev->speed) {
+	case USB_SPEED_LOW:	speed = "low";	break;
+	case USB_SPEED_FULL:	speed = "full";	break;
+	case USB_SPEED_HIGH:	speed = "high";	break;
+	case USB_SPEED_VARIABLE:
+				speed = "variable";
+				type = "Wireless ";
+				break;
+	default: 		speed = "?";	break;
+	}
 	dev_info (&udev->dev,
-			"%s %s speed USB device using %s and address %d\n",
-			(udev->config) ? "reset" : "new",
-			({ char *speed; switch (udev->speed) {
-			case USB_SPEED_LOW:	speed = "low";	break;
-			case USB_SPEED_FULL:	speed = "full";	break;
-			case USB_SPEED_HIGH:	speed = "high";	break;
-			default: 		speed = "?";	break;
-			}; speed;}),
-			udev->bus->controller->driver->name,
-			udev->devnum);
+		  "%s %s speed %sUSB device using %s and address %d\n",
+		  (udev->config) ? "reset" : "new", speed, type,
+		  udev->bus->controller->driver->name, udev->devnum);
 
 	/* Set up TT records, if needed  */
 	if (hdev->tt) {
