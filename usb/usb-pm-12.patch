From david-b@pacbell.net Fri Sep 23 00:30:49 2005
From: David Brownell <david-b@pacbell.net>
Subject: [patch 12/12] stop exporting two functions
Date: Thu, 22 Sep 2005 22:45:26 -0700
Cc: Greg KH <greg@kroah.com>
Message-Id: <200509222245.26850.david-b@pacbell.net>


The way we're looking at USB suspend lately doesn't expect drivers to
call usb_suspend_device() or usb_resume_device() directly; that'll
be implicit when no interfaces are in use.

This patch removes those APIs from visibility outside usbcore.

Signed-off-by: David Brownell <dbrownell@users.sourceforge.net>

 drivers/usb/core/hub.c |   12 ++++--------
 drivers/usb/core/usb.h |    4 ++++
 include/linux/usb.h    |    5 -----
 3 files changed, 8 insertions(+), 13 deletions(-)

--- gregkh-2.6.orig/drivers/usb/core/usb.h	2005-09-26 16:11:40.000000000 -0700
+++ gregkh-2.6/drivers/usb/core/usb.h	2005-09-26 16:12:16.000000000 -0700
@@ -29,6 +29,10 @@
 extern int usb_host_init(void);
 extern void usb_host_cleanup(void);
 
+extern int usb_suspend_device(struct usb_device *dev);
+extern int usb_resume_device(struct usb_device *dev);
+
+
 /* Interfaces and their "power state" are owned by usbcore */
 
 static inline void mark_active(struct usb_interface *f)
--- gregkh-2.6.orig/include/linux/usb.h	2005-09-26 14:58:57.000000000 -0700
+++ gregkh-2.6/include/linux/usb.h	2005-09-26 16:12:16.000000000 -0700
@@ -975,11 +975,6 @@
 	void *data, int len, int *actual_length,
 	int timeout);
 
-/* selective suspend/resume */
-extern int usb_suspend_device(struct usb_device *dev);
-extern int usb_resume_device(struct usb_device *dev);
-
-
 /* wrappers around usb_control_msg() for the most common standard requests */
 extern int usb_get_descriptor(struct usb_device *dev, unsigned char desctype,
 	unsigned char descindex, void *buf, int size);
--- gregkh-2.6.orig/drivers/usb/core/hub.c	2005-09-26 16:11:43.000000000 -0700
+++ gregkh-2.6/drivers/usb/core/hub.c	2005-09-26 16:12:16.000000000 -0700
@@ -1652,10 +1652,10 @@
 
 #endif
 
-/**
+/*
  * usb_suspend_device - suspend a usb device
  * @udev: device that's no longer in active use
- * Context: must be able to sleep; device not locked
+ * Context: must be able to sleep; device not locked; pm locks held
  *
  * Suspends a USB device that isn't in active use, conserving power.
  * Devices may wake out of a suspend, if anything important happens,
@@ -1820,10 +1820,10 @@
 
 #endif
 
-/**
+/*
  * usb_resume_device - re-activate a suspended usb device
  * @udev: device to re-activate
- * Context: must be able to sleep; device not locked
+ * Context: must be able to sleep; device not locked; pm locks held
  *
  * This will re-activate the suspended device, increasing power usage
  * while letting drivers communicate again with its endpoints.
@@ -2024,10 +2024,6 @@
 	kick_khubd(hub);
 }
 
-EXPORT_SYMBOL(usb_suspend_device);
-EXPORT_SYMBOL(usb_resume_device);
-
-
 
 /* USB 2.0 spec, 7.1.7.3 / fig 7-29:
  *
