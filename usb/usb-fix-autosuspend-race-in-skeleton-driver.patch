From oneukum@suse.de Thu Feb  8 06:42:33 2007
From: Oliver Neukum <oneukum@suse.de>
Date: Thu, 8 Feb 2007 15:42:53 +0100
Subject: USB: fix autosuspend race in skeleton driver
To: gregkh@suse.de, linux-usb-devel@lists.sourceforge.net, Edwin Olson <eolson@mit.edu>
Message-ID: <200702081542.53819.oneukum@suse.de>
Content-Disposition: inline


as the skeleton driver was made ready for autosuspend a race condition
was introduced. The reference to get device must be gotten before the
autosuspend counter is upped, as this operation may sleep, dropping BKL.
Dropping BKL means that the pointer to the device may become invalid.
Here's the fix.

Signed-off-by: Oliver Neukum <oneukum@suse.de>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
----

---
 drivers/usb/usb-skeleton.c |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

--- gregkh-2.6.orig/drivers/usb/usb-skeleton.c
+++ gregkh-2.6/drivers/usb/usb-skeleton.c
@@ -90,13 +90,15 @@ static int skel_open(struct inode *inode
 		goto exit;
 	}
 
+	/* increment our usage count for the device */
+	kref_get(&dev->kref);
+
 	/* prevent the device from being autosuspended */
 	retval = usb_autopm_get_interface(interface);
-	if (retval)
+	if (retval) {
+		kref_put(&dev->kref, skel_delete);
 		goto exit;
-
-	/* increment our usage count for the device */
-	kref_get(&dev->kref);
+	}
 
 	/* save our object in the file's private structure */
 	file->private_data = dev;
