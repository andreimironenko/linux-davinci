From david-b@pacbell.net Tue Sep 13 20:02:10 2005
From: David Brownell <david-b@pacbell.net>
Subject: [patch 2.6.14-rc1, 4/5] remove duplicated resume path code
Date: Tue, 13 Sep 2005 19:57:36 -0700
Cc: Greg KH <greg@kroah.com>
Message-Id: <200509131957.36332.david-b@pacbell.net>

This gets rid of some inconsistently duplicated logic to resume interfaces.
Similar code was in both finish_port_resume() and in usb_generic_resume().
Now there is just one copy of that code, accessed regardless of whether
CONFIG_USB_SUSPEND is enabled.  Fault handling is also more consistent.

Signed-off-by: David Brownell <dbrownell@users.sourceforge.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/core/hub.c |   33 +++++----------------------------
 1 file changed, 5 insertions(+), 28 deletions(-)

--- gregkh-2.6.orig/drivers/usb/core/hub.c	2005-09-16 17:34:35.000000000 -0700
+++ gregkh-2.6/drivers/usb/core/hub.c	2005-09-16 17:34:36.000000000 -0700
@@ -1723,6 +1723,7 @@ static int finish_port_resume(struct usb
 			status);
 	else if (udev->actconfig) {
 		unsigned	i;
+		int		(*resume)(struct device *);
 
 		le16_to_cpus(&devstatus);
 		if (devstatus & (1 << USB_DEVICE_REMOTE_WAKEUP)) {
@@ -1741,35 +1742,11 @@ static int finish_port_resume(struct usb
 		}
 
 		/* resume interface drivers; if this is a hub, it
-		 * resumes the child devices
+		 * may have a child resume event to deal with soon
 		 */
-		for (i = 0; i < udev->actconfig->desc.bNumInterfaces; i++) {
-			struct usb_interface	*intf;
-			struct usb_driver	*driver;
-
-			intf = udev->actconfig->interface[i];
-			if (is_active(intf))
-				continue;
-			if (!intf->dev.driver) {
-				/* FIXME maybe force to alt 0 */
-				continue;
-			}
-			driver = to_usb_driver(intf->dev.driver);
-
-			/* bus_rescan_devices() may rebind drivers */
-			if (!driver->resume)
-				continue;
-
-			/* can we do better than just logging errors? */
-			mark_active(intf);
-			status = driver->resume(intf);
-			if (status < 0) {
-				mark_quiesced(intf);
-				dev_dbg(&intf->dev,
-					"resume error %d\n",
-					status);
-			}
-		}
+		resume = udev->dev.bus->resume;
+		for (i = 0; i < udev->actconfig->desc.bNumInterfaces; i++)
+			(void) resume(&udev->actconfig->interface[i]->dev);
 		status = 0;
 
 	} else if (udev->devnum <= 0) {
