From zaitcev@redhat.com Wed Dec 21 17:06:26 2005
Date: Wed, 21 Dec 2005 17:03:24 -0800
From: Pete Zaitcev <zaitcev@redhat.com>
Cc: zaitcev@redhat.com, greg@kroah.com
Subject: usb: ioctl compat for usblp.c
Message-Id: <20051221170324.21c57242.zaitcev@redhat.com>

From: David Woodhouse <dwmw2>

David has a G5 with a printer. I am quite surprised that nobody else noticed
this before. Linus has a G5. Hackers hate printing in general, maybe.

We do not use BKL anymore, because one of code paths had a sleeping call,
so we had to use a semaphore. I am sure it's safe to use unlocked_ioctl.

The new ioctls return long and retval is int. It looks completely fine to me.
We never want these extra bits, and the sign extension ought to work right.

Signed-off-by: Pete Zaitcev <zaitcev@redhat.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

--

---
 drivers/usb/class/usblp.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- gregkh-2.6.orig/drivers/usb/class/usblp.c
+++ gregkh-2.6/drivers/usb/class/usblp.c
@@ -438,7 +438,7 @@ static unsigned int usblp_poll(struct fi
  			       | (!usblp->wcomplete ? 0 : POLLOUT | POLLWRNORM);
 }
 
-static int usblp_ioctl(struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)
+static long usblp_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 {
 	struct usblp *usblp = file->private_data;
 	int length, err, i;
@@ -838,7 +838,8 @@ static struct file_operations usblp_fops
 	.read =		usblp_read,
 	.write =	usblp_write,
 	.poll =		usblp_poll,
-	.ioctl =	usblp_ioctl,
+	.unlocked_ioctl =	usblp_ioctl,
+	.compat_ioctl =		usblp_ioctl,
 	.open =		usblp_open,
 	.release =	usblp_release,
 };
