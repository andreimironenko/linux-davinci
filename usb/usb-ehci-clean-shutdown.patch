From db@adsl-69-107-32-110.dsl.pltn13.pacbell.net Wed Sep 28 00:26:10 2005
Date: Tue, 27 Sep 2005 10:19:39 -0700
From: David Brownell <david-b@pacbell.net>
To: greg@kroah.com
Subject: USB: ehci.patch (earlier irq disable)
Message-Id: <20050927171939.59C22BCF91@adsl-69-107-32-110.dsl.pltn13.pacbell.net>


This tweaks the EHCI reboot notifier to also halt the EHCI controller, and
makes that halt code force IRQs off.  Both should always have been done.

Signed-off-by: David Brownell <dbrownell@users.sourceforge.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

 drivers/usb/host/ehci-hcd.c |    8 ++++++++
 1 file changed, 8 insertions(+)

--- gregkh-2.6.orig/drivers/usb/host/ehci-hcd.c	2005-10-03 14:29:40.000000000 -0700
+++ gregkh-2.6/drivers/usb/host/ehci-hcd.c	2005-10-03 14:36:55.000000000 -0700
@@ -182,6 +182,9 @@
 {
 	u32	temp = readl (&ehci->regs->status);
 
+	/* disable any irqs left enabled by previous code */
+	writel (0, &ehci->regs->intr_enable);
+
 	if ((temp & STS_HALT) != 0)
 		return 0;
 
@@ -335,12 +338,17 @@
 
 #endif
 
+/* Reboot notifiers kick in for silicon on any bus (not just pci, etc).
+ * This forcibly disables dma and IRQs, helping kexec and other cases
+ * where the next system software may expect clean state.
+ */
 static int
 ehci_reboot (struct notifier_block *self, unsigned long code, void *null)
 {
 	struct ehci_hcd		*ehci;
 
 	ehci = container_of (self, struct ehci_hcd, reboot_notifier);
+	(void) ehci_halt (ehci);
 
 	/* make BIOS/etc use companion controller during reboot */
 	writel (0, &ehci->regs->configured_flag);
