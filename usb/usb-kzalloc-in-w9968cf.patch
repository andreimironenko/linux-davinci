From linux-usb-devel-admin@lists.sourceforge.net Fri Jan  6 12:51:54 2006
From: Oliver Neukum <oliver@neukum.org>
To: Luca Risolia <luca.risolia@studio.unibo.it>, Greg KH <gregkh@suse.de>
Content-Disposition: inline
Message-Id: <200601062128.41016.oliver@neukum.org>
Subject: USB: kzalloc in w9968cf
Date: Fri, 6 Jan 2006 21:28:40 +0100

another one for kzalloc.


Signed-off-by: Oliver Neukum <oliver@neukum.name>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/media/w9968cf.c |   13 ++++---------
 1 file changed, 4 insertions(+), 9 deletions(-)

--- gregkh-2.6.orig/drivers/usb/media/w9968cf.c
+++ gregkh-2.6/drivers/usb/media/w9968cf.c
@@ -695,13 +695,12 @@ static int w9968cf_allocate_memory(struc
 	/* Allocate memory for the isochronous transfer buffers */
 	for (i = 0; i < W9968CF_URBS; i++) {
 		if (!(cam->transfer_buffer[i] =
-		      kmalloc(W9968CF_ISO_PACKETS*p_size, GFP_KERNEL))) {
+		      kzalloc(W9968CF_ISO_PACKETS*p_size, GFP_KERNEL))) {
 			DBG(1, "Couldn't allocate memory for the isochronous "
 			       "transfer buffers (%u bytes)", 
 			    p_size * W9968CF_ISO_PACKETS)
 			return -ENOMEM;
 		}
-		memset(cam->transfer_buffer[i], 0, W9968CF_ISO_PACKETS*p_size);
 	}
 
 	/* Allocate memory for the temporary frame buffer */
@@ -3499,12 +3498,10 @@ w9968cf_usb_probe(struct usb_interface* 
 		return -ENODEV;
 
 	cam = (struct w9968cf_device*)
-	          kmalloc(sizeof(struct w9968cf_device), GFP_KERNEL);
+	          kzalloc(sizeof(struct w9968cf_device), GFP_KERNEL);
 	if (!cam)
 		return -ENOMEM;
 
-	memset(cam, 0, sizeof(*cam));
-
 	init_MUTEX(&cam->dev_sem);
 	down(&cam->dev_sem);
 
@@ -3532,21 +3529,19 @@ w9968cf_usb_probe(struct usb_interface* 
 
 
 	/* Allocate 2 bytes of memory for camera control USB transfers */
-	if (!(cam->control_buffer = kmalloc(2, GFP_KERNEL))) {
+	if (!(cam->control_buffer = kzalloc(2, GFP_KERNEL))) {
 		DBG(1,"Couldn't allocate memory for camera control transfers")
 		err = -ENOMEM;
 		goto fail;
 	}
-	memset(cam->control_buffer, 0, 2);
 
 	/* Allocate 8 bytes of memory for USB data transfers to the FSB */
-	if (!(cam->data_buffer = kmalloc(8, GFP_KERNEL))) {
+	if (!(cam->data_buffer = kzalloc(8, GFP_KERNEL))) {
 		DBG(1, "Couldn't allocate memory for data "
 		       "transfers to the FSB")
 		err = -ENOMEM;
 		goto fail;
 	}
-	memset(cam->data_buffer, 0, 8);
 
 	/* Register the V4L device */
 	cam->v4ldev = video_device_alloc();
