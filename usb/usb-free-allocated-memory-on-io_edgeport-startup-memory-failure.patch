From docmax@gmail.com Sat Jun  3 14:05:00 2006
Message-ID: <68669c1d0606031358l368b4d6dk436149f5fb1349b6@mail.gmail.com>
Date: Sat, 3 Jun 2006 13:58:19 -0700
From: "Chris Lund" <docmax@gmail.com>
To: greg@kroah.com
Subject: USB: free allocated memory on io_edgeport startup memory failure
Content-Disposition: inline

While an Edgeport is allocating individual port structures, if kmalloc
returns NULL, the serial structure is freed and -ENOMEM, but the ports
allocated before the failure are not freed.  This patch addresses that
condition.

Signed-off-by: Christopher Lund <docmax@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/serial/io_edgeport.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- gregkh-2.6.orig/drivers/usb/serial/io_edgeport.c
+++ gregkh-2.6/drivers/usb/serial/io_edgeport.c
@@ -2730,7 +2730,7 @@ static int edge_startup (struct usb_seri
 	struct edgeport_serial *edge_serial;
 	struct edgeport_port *edge_port;
 	struct usb_device *dev;
-	int i;
+	int i, j;
 
 	dev = serial->dev;
 
@@ -2794,6 +2794,10 @@ static int edge_startup (struct usb_seri
 		edge_port = kmalloc (sizeof(struct edgeport_port), GFP_KERNEL);
 		if (edge_port == NULL) {
 			dev_err(&serial->dev->dev, "%s - Out of memory\n", __FUNCTION__);
+			for (j = 0; j < i; ++j) {
+				kfree (usb_get_serial_port_data(serial->port[j]));
+				usb_set_serial_port_data(serial->port[j],  NULL);
+			}
 			usb_set_serial_data(serial, NULL);
 			kfree(edge_serial);
 			return -ENOMEM;
