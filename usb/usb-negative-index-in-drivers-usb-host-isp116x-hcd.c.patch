From akpm@osdl.org Thu Jun  1 20:44:33 2006
Message-Id: <200606020344.k523iQ26029471@shell0.pdx.osdl.net>
Subject: USB: negative index in drivers/usb/host/isp116x-hcd.c
To: greg@kroah.com
Cc: linux-usb-devel@lists.sourceforge.net, akpm@osdl.org, snakebyte@gmx.de
From: akpm@osdl.org
Date: Thu, 01 Jun 2006 20:48:45 -0700


From: Eric Sesterhenn <snakebyte@gmx.de>

This fixes coverity Bug #390.

With the following code

	ret = ep->branch = balance(isp116x, ep->period, ep->load);
	if (ret < 0)
		goto fail;

the problem is that ret and balance are of the type int, and ep->branch is u16.
so the int balance() returns gets reduced to u16 and then converted to an int again,
which removes the sign. Maybe the following little c program can explain it better:

----snip----
int foo() {
	return -5;
}

int main(int argc, char **argv) {
	int a;
	unsigned short b;

	a = b = foo();
	if (a < 0)
		puts("case 1 works\n");

	b = a = foo();
	if (a < 0 )
		puts("case 2 works\n");
}
----snip----

only the case 2 output is visible.

Signed-off-by: Eric Sesterhenn <snakebyte@gmx.de>
Signed-off-by: Andrew Morton <akpm@osdl.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/host/isp116x-hcd.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- gregkh-2.6.orig/drivers/usb/host/isp116x-hcd.c
+++ gregkh-2.6/drivers/usb/host/isp116x-hcd.c
@@ -781,7 +781,7 @@ static int isp116x_urb_enqueue(struct us
 		if (ep->branch < PERIODIC_SIZE)
 			break;
 
-		ret = ep->branch = balance(isp116x, ep->period, ep->load);
+		ep->branch = ret = balance(isp116x, ep->period, ep->load);
 		if (ret < 0)
 			goto fail;
 		ret = 0;
