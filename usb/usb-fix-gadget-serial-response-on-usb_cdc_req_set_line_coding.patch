From leoli@freescale.com Wed Mar 14 05:17:50 2007
Message-ID: <45F7E80D.3020008@freescale.com>
Date: Wed, 14 Mar 2007 20:18:21 +0800
From: Li Yang <leoli@freescale.com>
MIME-Version: 1.0
To: gregkh@suse.de, <greg@kroah.com>
Cc: david-b@pacbell.net, linux-usb-devel@lists.sourceforge.net
Subject: USB: Fix gadget serial response on USB_CDC_REQ_SET_LINE_CODING

Apparently this gadget doesn't support setting usb_cdc_line_coding.
But the code pretends that it supports, and queues a zero length
request for the DATA phase.  That will cause overflow for udc in
processing the DATA transaction.  The patch make it return -EOPNOTSUPP
and stall cleanly.

Signed-off-by: Li Yang <leoli@freescale.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/gadget/serial.c |    9 +--------
 1 file changed, 1 insertion(+), 8 deletions(-)

--- a/drivers/usb/gadget/serial.c
+++ b/drivers/usb/gadget/serial.c
@@ -1692,14 +1692,7 @@ static int gs_setup_class(struct usb_gad
 
 	switch (ctrl->bRequest) {
 	case USB_CDC_REQ_SET_LINE_CODING:
-		ret = min(wLength,
-			(u16)sizeof(struct usb_cdc_line_coding));
-		if (port) {
-			spin_lock(&port->port_lock);
-			memcpy(&port->port_line_coding, req->buf, ret);
-			spin_unlock(&port->port_lock);
-		}
-		ret = 0;
+		/* FIXME: We don't support set line coding */
 		break;
 
 	case USB_CDC_REQ_GET_LINE_CODING:
