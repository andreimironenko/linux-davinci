From xiphmont@gmail.com Thu Sep 28 00:11:24 2006
Message-ID: <806dafc20609280011p741b74d6q1963f4d6181b9936@mail.gmail.com>
Date: Thu, 28 Sep 2006 03:11:20 -0400
From: "Christopher \"Monty\" Montgomery" <xiphmont@gmail.com>
To: linux-usb-devel@lists.sourceforge.net
Subject: [PATCH 6/15] USB: ehci-hcd: group ehci_sitd code in one place
Cc: greg@kroah.com, david-b@pacbell.net, xiphmont@gmail.com
Content-Disposition: inline

patch 6: Untangle ehci_iso_stream and sitd code.  Remove
ifdefs and code for EHCI_URB_TRACE within ehci-sched in preference for
later additional debugging information tailored to the new code.
Aside from removal of unused ifdefs, this patch results in no
functional difference.

Signed-off-by: Christopher "Monty" Montgomery <xiphmont@gmail.com>
Cc: David Brownell <david-b@pacbell.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---

---
 drivers/usb/host/Kconfig      |    9 --------
 drivers/usb/host/ehci-sched.c |   43 ------------------------------------------
 2 files changed, 52 deletions(-)

--- gregkh-2.6.orig/drivers/usb/host/Kconfig
+++ gregkh-2.6/drivers/usb/host/Kconfig
@@ -29,15 +29,6 @@ config USB_EHCI_HCD
 	  To compile this driver as a module, choose M here: the
 	  module will be called ehci-hcd.
 
-config USB_EHCI_SPLIT_ISO
-	bool "Full speed ISO transactions (EXPERIMENTAL)"
-	depends on USB_EHCI_HCD && EXPERIMENTAL
-	default n
-	---help---
-	  This code is new and hasn't been used with many different
-	  EHCI or USB 2.0 transaction translator implementations.
-	  It should work for ISO-OUT transfers, like audio.
-
 config USB_EHCI_ROOT_HUB_TT
 	bool "Root Hub Transaction Translators (EXPERIMENTAL)"
 	depends on USB_EHCI_HCD && EXPERIMENTAL
--- gregkh-2.6.orig/drivers/usb/host/ehci-sched.c
+++ gregkh-2.6/drivers/usb/host/ehci-sched.c
@@ -1864,17 +1864,6 @@ static int itd_submit (struct ehci_hcd *
 		goto done;
 	}
 
-#ifdef EHCI_URB_TRACE
-	ehci_dbg (ehci,
-		"%s %s urb %p ep%d%s len %d, %d pkts %d uframes [%p]\n",
-		__FUNCTION__, urb->dev->devpath, urb,
-		usb_pipeendpoint (urb->pipe),
-		usb_pipein (urb->pipe) ? "in" : "out",
-		urb->transfer_buffer_length,
-		urb->number_of_packets, urb->interval,
-		stream);
-#endif
-
 	/* allocate ITDs w/o locking anything */
 	status = itd_urb_transaction (stream, ehci, urb, mem_flags);
 	if (unlikely (status < 0)) {
@@ -1899,8 +1888,6 @@ done:
 	return status;
 }
 
-#ifdef CONFIG_USB_EHCI_SPLIT_ISO
-
 /*-------------------------------------------------------------------------*/
 /* Split-ISO transfer machinery; used for FS isoch transfers through the
  * TTs in USB 2.0 hubs. */
@@ -2271,15 +2258,6 @@ static int sitd_submit (struct ehci_hcd 
 		goto done;
 	}
 
-#ifdef EHCI_URB_TRACE
-	ehci_dbg (ehci,
-		"submit %p dev%s ep%d%s-iso len %d\n",
-		urb, urb->dev->devpath,
-		usb_pipeendpoint (urb->pipe),
-		usb_pipein (urb->pipe) ? "in" : "out",
-		urb->transfer_buffer_length);
-#endif
-
 	/* allocate SITDs */
 	status = sitd_urb_transaction (stream, ehci, urb, mem_flags);
 	if (status < 0) {
@@ -2304,27 +2282,6 @@ done:
 	return status;
 }
 
-#else
-
-static inline int
-sitd_submit (struct ehci_hcd *ehci, struct urb *urb, gfp_t mem_flags)
-{
-	ehci_dbg (ehci, "split iso support is disabled\n");
-	return -ENOSYS;
-}
-
-static inline unsigned
-sitd_complete (
-	struct ehci_hcd		*ehci,
-	struct ehci_sitd	*sitd,
-	struct pt_regs		*regs
-) {
-	ehci_err (ehci, "sitd_complete %p?\n", sitd);
-	return 0;
-}
-
-#endif /* USB_EHCI_SPLIT_ISO */
-
 /* scan_periodic - completion worker; called out of interrupt (or
  * poll) handler to finish processing of transactions that have been
  * completed by the host controller.  Also now has the responsibility
