From stern@rowland.harvard.edu Fri Jan  6 12:51:08 2006
Date: Fri, 6 Jan 2006 15:13:18 -0500 (EST)
From: Alan Stern <stern@rowland.harvard.edu>
To: Greg KH <greg@kroah.com>
cc: Jeff Lange <jlange6648@gmail.com>
Subject: USB: UHCI: No FSBR until device is configured
Message-ID: <Pine.LNX.4.44L0.0601061418070.4973-100000@iolanthe.rowland.org>

There are a few USB devices that don't enumerate properly when FSBR is
turned on.  Currently uhci-hcd has started using FSBR as soon as a
device receives its address, but now we've found a device that won't
provide its descriptors when FSBR is on.

Accordingly, this patch (as629) leaves FSBR off for any device that
isn't in the CONFIGURED state.  This will slow down the configuration
process a tiny bit, but not enough to matter.  Furthermore it imitates
the way Windows behaves -- often a good thing to do.

Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/host/uhci-q.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- gregkh-2.6.orig/drivers/usb/host/uhci-q.c
+++ gregkh-2.6/drivers/usb/host/uhci-q.c
@@ -602,9 +602,9 @@ static int uhci_submit_control(struct uh
 	/* Low-speed transfers get a different queue, and won't hog the bus.
 	 * Also, some devices enumerate better without FSBR; the easiest way
 	 * to do that is to put URBs on the low-speed queue while the device
-	 * is in the DEFAULT state. */
+	 * isn't in the CONFIGURED state. */
 	if (urb->dev->speed == USB_SPEED_LOW ||
-			urb->dev->state == USB_STATE_DEFAULT)
+			urb->dev->state != USB_STATE_CONFIGURED)
 		qh->skel = uhci->skel_ls_control_qh;
 	else {
 		qh->skel = uhci->skel_fs_control_qh;
