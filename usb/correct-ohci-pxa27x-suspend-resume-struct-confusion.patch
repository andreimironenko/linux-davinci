From rpurdie@rpsys.net Mon Nov 28 14:21:56 2005
Subject: [patch] Correct ohci-pxa27x suspend/resume struct confusion
From: Richard Purdie <rpurdie@rpsys.net>
To: Greg KH <gregkh@suse.de>
Date: Mon, 28 Nov 2005 22:15:46 +0000
Message-Id: <1133216147.8673.31.camel@localhost.localdomain>

The device data in ohci-pxa27x is a struct hcd, not a struct ohci_hcd.
This correct the suspend/resume calls to account for this and adds some
code to invalidate the platform data when the module is removed.

Signed-off-by: Richard Purdie <rpurdie@rpsys.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/host/ohci-pxa27x.c |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

--- gregkh-2.6.orig/drivers/usb/host/ohci-pxa27x.c
+++ gregkh-2.6/drivers/usb/host/ohci-pxa27x.c
@@ -309,20 +309,22 @@ static int ohci_hcd_pxa27x_drv_remove(st
 	struct usb_hcd *hcd = platform_get_drvdata(pdev);
 
 	usb_hcd_pxa27x_remove(hcd, pdev);
+	platform_set_drvdata(pdev, NULL);
 	return 0;
 }
 
 #ifdef	CONFIG_PM
 static int ohci_hcd_pxa27x_drv_suspend(struct platform_device *pdev, pm_message_t state)
 {
-	struct ohci_hcd *ohci = platform_get_drvdata(pdev);
+	struct usb_hcd *hcd = platform_get_drvdata(pdev);
+	struct ohci_hcd *ohci = hcd_to_ohci(hcd);
 
 	if (time_before(jiffies, ohci->next_statechange))
 		msleep(5);
 	ohci->next_statechange = jiffies;
 
 	pxa27x_stop_hc(&pdev->dev);
-	ohci_to_hcd(ohci)->state = HC_STATE_SUSPENDED;
+	hcd->state = HC_STATE_SUSPENDED;
 	pdev->dev.power.power_state = PMSG_SUSPEND;
 
 	return 0;
@@ -330,7 +332,8 @@ static int ohci_hcd_pxa27x_drv_suspend(s
 
 static int ohci_hcd_pxa27x_drv_resume(struct platform_device *pdev)
 {
-	struct ohci_hcd	*ohci = platform_get_drvdata(pdev);
+	struct usb_hcd *hcd = platform_get_drvdata(pdev);
+	struct ohci_hcd *ohci = hcd_to_ohci(hcd);
 	int status;
 
 	if (time_before(jiffies, ohci->next_statechange))
@@ -341,7 +344,7 @@ static int ohci_hcd_pxa27x_drv_resume(st
 		return status;
 
 	pdev->dev.power.power_state = PMSG_ON;
-	usb_hcd_resume_root_hub(platform_get_drvdata(pdev));
+	usb_hcd_resume_root_hub(hcd);
 
 	return 0;
 }
