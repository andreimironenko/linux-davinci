From hap9@epoch.ncsc.mil Wed Mar 22 13:26:14 2006
From: Ryan Wilson <hap9@epoch.ncsc.mil>
Subject: driver core: driver_bind attribute returns incorrect value
To: gregkh@suse.de
Cc: linux-kernel@vger.kernel.org
Date: Wed, 22 Mar 2006 16:26:25 -0500
Message-Id: <1143062785.22254.15.camel@moss-tarheels.epoch.ncsc.mil>

The manual driver <-> device binding attribute in sysfs doesn't return
the correct value on failure or success of driver_probe_device.
driver_probe_device returns 1 on success (the driver accepted the
device) or 0 on probe failure (when the driver didn't accept the
device but no real error occured). However, the attribute can't just
return 0 or 1, it must return the number of bytes consumed from buf
or an error value. Returning 0 indicates to userspace that nothing
was written (even though the kernel has tried to do the bind/probe and
failed). Returning 1 indicates that only one character was accepted in
which case userspace will re-try the write with a partial string.

A more correct version of driver_bind would return count (to indicate
the entire string was consumed) when driver_probe_device returns 1
and -ENODEV when driver_probe_device returns 0. This patch makes that
change.

Signed-off-by: Ryan Wilson <hap9@epoch.ncsc.mil>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/base/bus.c |    5 +++++
 1 file changed, 5 insertions(+)

--- gregkh-2.6.orig/drivers/base/bus.c
+++ gregkh-2.6/drivers/base/bus.c
@@ -524,6 +524,11 @@ static int bus_rescan_devices_helper(str
 		device_attach(dev);
 		if (dev->parent)
 			up(&dev->parent->sem);
+
+		if (err > 0) 		/* success */
+			err = count;
+		else if (err == 0)	/* driver didn't accept device */
+			err = -ENODEV;
 	}
 	return 0;
 }
