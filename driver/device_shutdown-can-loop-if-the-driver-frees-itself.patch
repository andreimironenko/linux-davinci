From akpm@osdl.org Mon Jan  9 01:09:07 2006
Message-Id: <200601090905.k09953Iv027215@shell0.pdx.osdl.net>
From: "Michael Richardson" <mcr@sandelman.ottawa.on.ca>
Subject: device_shutdown can loop if the driver frees itself
To: mcr@sandelman.ottawa.on.ca, dhowells@redhat.com, greg@kroah.com,
   mcr@marajade.sandelman.ca, mochel@digitalimplant.org,
   mm-commits@vger.kernel.org
Date: Mon, 09 Jan 2006 01:04:51 -0800


From: "Michael Richardson" <mcr@sandelman.ottawa.on.ca>

This patch changes device_shutdown() to use the newly introduced safe
reverse list traversal.  We experienced loops on system reboot if we had
removed and re-inserted our device from the device list.

We noticed this problem on PPC405. Our PCI IDE device comes and goes a lot.

Our hypothesis was that there was a loop caused by the driver->shutdown
freeing memory.  It is possible that we do something wrong as well, but
being unable to reboot is kind of nasty.

Signed-off-by: Michael Richardson <mcr@marajade.sandelman.ca>
Cc: Patrick Mochel <mochel@digitalimplant.org>
Cc: David Howells <dhowells@redhat.com>
Signed-off-by: Andrew Morton <akpm@osdl.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/base/power/shutdown.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- gregkh-2.6.orig/drivers/base/power/shutdown.c
+++ gregkh-2.6/drivers/base/power/shutdown.c
@@ -35,10 +35,10 @@ extern int sysdev_shutdown(void);
  */
 void device_shutdown(void)
 {
-	struct device * dev;
+	struct device * dev, *devn;
 
 	down_write(&devices_subsys.rwsem);
-	list_for_each_entry_reverse(dev, &devices_subsys.kset.list,
+	list_for_each_entry_safe_reverse(dev, devn, &devices_subsys.kset.list,
 				kobj.entry) {
 		if (dev->bus && dev->bus->shutdown) {
 			dev_dbg(dev, "shutdown\n");
