From rdunlap@xenotime.net Tue Oct  4 00:47:46 2005
Date: Tue, 4 Oct 2005 00:45:34 -0700
From: "Randy.Dunlap" <rdunlap@xenotime.net>
To: gregkh <greg@kroah.com>, alexey <adobriyan@gmail.com>
Cc: kjo <kernel-janitors@lists.osdl.org>
Subject: [PATCH] (replacement) kobject: fix gfp flags type
Message-Id: <20051004004534.0e00d067.rdunlap@xenotime.net>

From: Randy Dunlap <rdunlap@xenotime.net>

Fix implicit nocast warnings in kobject_uevent code, including __nocast:
lib/kobject_uevent.c:78:37: warning: implicit cast to nocast type
lib/kobject_uevent.c:97:51: warning: implicit cast to nocast type
lib/kobject_uevent.c:120:27: warning: implicit cast to nocast type

Signed-off-by: Randy Dunlap <rdunlap@xenotime.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 include/linux/kobject.h |    2 +-
 lib/kobject.c           |    2 +-
 lib/kobject_uevent.c    |    6 +++---
 3 files changed, 5 insertions(+), 5 deletions(-)

--- gregkh-2.6.orig/include/linux/kobject.h
+++ gregkh-2.6/include/linux/kobject.h
@@ -65,7 +65,7 @@ extern void kobject_unregister(struct ko
 extern struct kobject * kobject_get(struct kobject *);
 extern void kobject_put(struct kobject *);
 
-extern char * kobject_get_path(struct kobject *, int);
+extern char * kobject_get_path(struct kobject *, unsigned int __nocast);
 
 struct kobj_type {
 	void (*release)(struct kobject *);
--- gregkh-2.6.orig/lib/kobject_uevent.c
+++ gregkh-2.6/lib/kobject_uevent.c
@@ -62,7 +62,7 @@ static struct sock *uevent_sock;
  * @gfp_mask:
  */
 static int send_uevent(const char *signal, const char *obj,
-		       char **envp, int gfp_mask)
+		       char **envp, unsigned int __nocast gfp_mask)
 {
 	struct sk_buff *skb;
 	char *pos;
@@ -98,7 +98,7 @@ static int send_uevent(const char *signa
 }
 
 static int do_kobject_uevent(struct kobject *kobj, enum kobject_action action, 
-			     struct attribute *attr, int gfp_mask)
+			struct attribute *attr, unsigned int __nocast gfp_mask)
 {
 	char *path;
 	char *attrpath;
@@ -170,7 +170,7 @@ postcore_initcall(kobject_uevent_init);
 
 #else
 static inline int send_uevent(const char *signal, const char *obj,
-			      char **envp, int gfp_mask)
+			      char **envp, unsigned int __nocast gfp_mask)
 {
 	return 0;
 }
--- gregkh-2.6.orig/lib/kobject.c
+++ gregkh-2.6/lib/kobject.c
@@ -100,7 +100,7 @@ static void fill_kobj_path(struct kobjec
  * @kobj:	kobject in question, with which to build the path
  * @gfp_mask:	the allocation type used to allocate the path
  */
-char *kobject_get_path(struct kobject *kobj, int gfp_mask)
+char *kobject_get_path(struct kobject *kobj, unsigned int __nocast gfp_mask)
 {
 	char *path;
 	int len;
